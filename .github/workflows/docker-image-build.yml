name: Docker Build and Push

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"  # Run every day at 10:00 UTC for nightly builds
  push:
    tags:
      - 'v**'  # Push events for semantic version tags
    branches:
      - develop  # Push events for the develop branch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DOCKER_PAT }}

      - name: Set up QEMU for Multi-Platform Builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Generate Docker Build Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.maintainer=${{ github.actor }}
          annotations: |
            com.github.actions.name=${{ github.workflow }}
            com.github.actions.description=${{ github.workflow }}
            com.github.actions.icon=package

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-build-logs
          path: /tmp/
